[project]
name = "langchain-prompts-examples"
version = "0.1.0"
description = "Comprehensive LangChain prompt examples with open source models"
authors = [
    {name = "LangChain Examples", email = "examples@langchain.com"}
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["langchain", "prompts", "ai", "llm", "examples", "open-source"]
dependencies = [
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-ollama>=0.1.0",
    "langchain-huggingface>=0.1.0",
    "langchain-ctransformers>=0.1.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "faiss-cpu>=1.7.0",
    "sentence-transformers>=2.2.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "requests>=2.28.0",
    "numpy>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

ollama = [
    "ollama>=0.1.0",
]

huggingface = [
    "huggingface-hub>=0.16.0",
    "accelerate>=0.20.0",
]

local = [
    "ctransformers>=0.2.0",
    "llama-cpp-python>=0.2.0",
]

[project.scripts]
run-examples = "run_all_examples:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["langchain_prompts_examples"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short" 